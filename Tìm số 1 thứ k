#include<bits/stdc++.h>
using namespace std;

const int maxN = 100001;
int n, m, a[maxN], t[4 * maxN];

void build(int id, int l, int r) {
    if(l == r) {
        t[id] = a[l]; return;
    }
    
    int m = (l + r) / 2;
    build(2 * id, l, m); build(2 * id + 1, m + 1, r);
    t[id] = t[2 * id] + t[2 * id + 1];
}

void update(int id, int tl, int tr, int i) {
    if(tl > i || tr < i) return;
    if(tl == tr) {
        t[id] = 1 - a[i];
        a[i] = 1 - a[i];
        return;
    }

    int tm = (tl + tr) / 2;
    update(2 * id, tl, tm, i); update(2 * id + 1, tm + 1, tr, i);
    t[id] = t[2 * id] + t[2 * id + 1];
}

int get(int id, int tl, int tr, int k) {
    if(tl == tr) return tl;
    
    int tm = (tl + tr) / 2;
    if(t[2 * id] >= k) return get(2 * id, tl, tm, k);
    return get(2 * id + 1, tm + 1, tr, k - t[2 * id]);
}

int main() {
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    cin >> n >> m;
    for(int i = 1; i <= n; ++i) cin >> a[i];
    build(1, 1, n);
    while(m--) {
        int x, k; cin >> x >> k;
        if(x == 1) update(1, 1, n, k);
        else cout << get(1, 1, n, k) << endl;
    }
}
