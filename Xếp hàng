#include<bits/stdc++.h>
using namespace std;

int n, q, a[50005], t[200005][2];

void built(int i, int l, int r) {
	if(l == r) {
		t[i][0] = a[l];
		t[i][1] = a[l];
		return;
	}
	int m = (l + r) / 2;
	built(2 * i, l, m); built(2 * i + 1, m + 1, r);
	t[i][0] = max(t[2 * i][0], t[2 * i + 1][0]);
	t[i][1] = min(t[2 * i][1], t[2 * i + 1][1]);
}

int findMax(int i, int l, int r, int tl, int tr) {
	if(l > tr || r < tl || l > r) return INT_MIN;
	if(l == tl && r == tr) return t[i][0];
	int tm = (tl + tr) / 2;
	return max(findMax(i * 2, l, min(r, tm), tl, tm), findMax(i * 2 + 1, max(tm + 1, l), r, tm + 1, tr));
}

int findMin(int i, int l, int r, int tl, int tr) {
	if(l > tr || r < tl || l > r) return INT_MAX;
	if(l == tl && r == tr) return t[i][1];
	int tm = (tl + tr) / 2;
	return min(findMin(i * 2, l, min(r, tm), tl, tm), findMin(i * 2 + 1, max(tm + 1, l), r, tm + 1, tr));
}

int main() {
	cin >> n >> q;
	for(int i = 1; i <= n; ++i) cin >> a[i];
	built(1, 1, n);
	while(q--) {
		int l, r; cin >> l >> r;
		cout << findMax(1, l, r, 1, n) - findMin(1, l, r, 1, n) << endl;
	}
}
