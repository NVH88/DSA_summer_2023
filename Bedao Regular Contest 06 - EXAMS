// giải bằng toán
#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
   
    int n; cin >> n;
    long long a[n + 1], f[n + 1] = {0}, s[n + 1] = {0};
    for(int i = 1; i <= n; ++i) cin >> a[i], f[i] = (f[i - 1] + a[i]) % M;

    for(int i = 2; i <= n; ++i) {
        s[i] = (s[i - 1] + (a[i] * (f[n] - f[i] + M) % M)) % M;
    }

    long long ans = 0;
    for(int i = 1; i <= n - 2; ++i) {
        ans = (ans + (a[i] * (s[n] - s[i] + M) % M) % M) % M;
    }
    cout << ans;
}

// giải bằng dp
#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;
long long f[100001][4];

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
   
    int n; cin >> n;
    int a[n + 1];
    for(int i = 1; i <= n; ++i) cin >> a[i], f[i][1] = (a[i] + f[i - 1][1] + M) % M;

    for(int i = 1; i <= n; ++i) f[i][2] = (f[i - 1][2] + a[i] * f[i - 1][1]) % M;
    for(int i = 1; i <= n; ++i) f[i][3] = (f[i - 1][3] + a[i] * f[i - 1][2]) % M;

    cout << f[n][3];
}
