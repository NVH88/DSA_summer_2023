// dùng đệ quy( quy hoạch động ngược)

#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;

int n, x, a[105], f[1000001];

void init() {
    cin >> n >> x;
    for(int i = 0; i < n; ++i) cin >> a[i];
    for(int i = 1; i <= x; ++i) f[i] = -1;
    f[0] = 1;
}

int back(int i) {
    if(f[i] != -1) return f[i];

    int cnt = 0;
    for(int j = 0; j < n; ++j) {
        if(i >= a[j]) {
            cnt += back(i - a[j]);
            cnt %= M;
        }
    }
    return f[i] = cnt;
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif

    init();
    cout << back(x);
}

// quy hoạch động thẳng

#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
   
    int n, x; cin >> n >> x;
    int a[n], f[x + 1];
    for(int i = 0; i < n; ++i) cin >> a[i];
    f[0] = 1;
    for(int i = 1; i <= x; ++i) {
        f[i] = 0;
        for(int j = 0; j < n; ++j) {
            if(i >= a[j]) {
                f[i] += f[i - a[j]]; 
                f[i] %= M;
            }
        }
    }
    cout << f[x];
}
