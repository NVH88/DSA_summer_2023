#include<bits/stdc++.h>
using namespace std;
const int M = 1e9 + 7;

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif
   
    int n, m; cin >> n >> m;
    long long dp[n + 1][m + 2], a[n + 1]; 
    for(int i = 1; i <= n; ++i) cin >> a[i];
    for(int i = 2; i <= n; ++i) {
        if(a[i] && a[i - 1] && abs(a[i] - a[i - 1]) > 1) {
            cout << 0;
            return 0;
        }
    }

    memset(dp, 0, sizeof(dp));
    dp[1][a[1]] = 1;
    if(a[1] == 0) for(int i = 1; i <= m; ++i) dp[1][i] = 1;
    
    for(int i = 2; i <= n; ++i) {
        if(a[i] != 0) {
            if(a[i - 1]) dp[i][a[i]] = dp[i - 1][a[i - 1]];
            else dp[i][a[i]] = dp[i - 1][a[i] - 1] + dp[i - 1][a[i]] + dp[i - 1][a[i] + 1];
            dp[i][a[i]] %= M;
        }

        else {
            if(a[i - 1] != 0) {
                dp[i][a[i - 1]] = dp[i - 1][a[i - 1]];
                if(a[i - 1] - 1) dp[i][a[i - 1] - 1] = dp[i - 1][a[i - 1]];
                if(a[i - 1] + 1 <= m) dp[i][a[i - 1] + 1] = dp[i - 1][a[i - 1]];
            }
            
            else {
                for(int j = 1; j <= m; ++j) {
                    if(dp[i - 1][j]) {
                        dp[i][j] += dp[i - 1][j]; dp[i][j] %= M;
                        if(j - 1) dp[i][j - 1] += dp[i - 1][j], dp[i][j - 1] %= M;
                        if(j + 1 <= m) dp[i][j + 1] += dp[i - 1][j], dp[i][j + 1] %= M;
                    }
                }
            }
        }
    }
    if(a[n]) cout << dp[n][a[n]];
    else {
        long long ans = 0;
        for(int i = 1; i <= m; ++i) {
            ans += dp[n][i]; ans %= M;
        }
        cout << ans;
    }
}
